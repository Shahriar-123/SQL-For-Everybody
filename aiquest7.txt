

--#new EDITOR-> CTRL + ]


--create table sales.
insert into schema.table
--(columns)
--values ()

insert into sales.students 
(name,students_id)
values 
('abcd',64564),
('Mr Abul',65456);

insert into sales.students 
values 
(645,'uyf'),
(6545,'Mr bablu');
----
--DDL
--create schema practice;
create table practice.departments
(department_id serial,
department_name varchar,
manager_id int,
location_id int,
is_active bool);

---DDL
alter table practice.departments 
add created_at 
timestamp 
--null 
default now();


--DDL
create table practice.departments_copy 
as 
select
manager_id, 
department_name 
from practice.departments 
limit 0;

insert into practice.departments_copy 
select
manager_id, 
department_name 
from practice.departments limit 1;

---DDL
select
manager_id, 
department_name 
into practice.departments_copy 
from practice.departments limit 2;


###INSERTING_2_VALUES_INTO_DEPT_CP
---DML
insert into practice.departments_copy 
select
manager_id, 
department_name 
from practice.departments limit 2;

---DML
insert into practice.departments_copy 
select 
99999,'MY DEPARTMENT';

--DML
insert into practice.departments_copy 
VALUES
(88888,'MY DEPARTMENT2');

--###DELETING_VALUES_FROM_DEPT_CP

---DELETE (CONDITIONAL/FILTER)
--where MUST
delete 
from 
practice.departments_copy ;
--REVOES ALL DATE / CLEANES THE TABLE
--REVERT KORO to ###DELETING_VALUES_FROM_DEPT_CP


delete 
from 
practice.departments_copy 
where manager_id =99999;

delete 
from 
practice.departments_copy 
where manager_id =200;


----DML 
delete 
from 
practice.departments_copy 
where TRUE;

###PILLER_REMOVING_ALL_DATA
--DDL
truncate table 
practice.departments_copy ;

create schema backup_removed_robiul;

--select *
--into 
--backup_removed_robiul.departments_copy_manager_id_99999_20230901_10_2pm
--from 
--practice.departments_copy 
--where manager_id =99999;

##PILLER_X
delete 
from 
practice.departments_copy 
where manager_id =99999;

insert into 
practice.departments_copy 
select * from backup_removed_robiul.departments_copy_manager_id_99999_20230901_10_2pm ;


----UPDATE (WHERE/FILTER MUST)
update 
practice.departments_copy 
set department_name='DEPT999'
where  manager_id=99999;


update 
practice.departments_copy 
set 
department_name='DEPTNEW'
,manager_id =878787
where  manager_id=99999;

-----------

select * 
into practice.new_dept 
from practice.departments 
limit 5;
-----------


delete 
from 
practice.departments_copy 
where manager_id =99999;



---ALIASING
---COLUMN LEVEL, TABLE LEVEL 
select 
department_id as ID, department_name as name 
from 
practice.departments;

select 
dept.department_id, dept.department_name 
from 
practice.departments AS dept;

select 
dept.department_id, dept.department_name 
from 
practice.departments dept;

select 
department_id  as id, department_name  name 
from 
practice.departments dept;

--delete 
--from 
--practice.departments 
--where manager_id =99999;


---REMOVE THOSE ROWS FROM DEPT 
--where DEPT IDs EXISTS IN NEW_DEP 
--AND NEW_DEPT ID > 40
1. delete from DEPT 
2. where DEPT_ID in NEW_DEP 
3. and NEW_DEP_ID >40

delete 
from 
practice.departments dpt  
USING 
practice.new_dept as new_dpt  
where dpt.department_id = new_dpt.department_id 
and new_dpt.department_id >40;

---UPDATE THOSE ROWS FROM DEPT 
--- SET DEPT_ID = 1000+ existing id
--where DEPT IDs DOES NOT EXIST IN NEW_DEP 
--AND NEW_DEPT ID < 40
update 
practice.departments dpt  
set department_id = dpt.department_id+1000
from 
practice.new_dept newd
where 
newd.department_id <> dpt.department_id 
and newd.department_id <40;

-----------------

update 
practice.departments dpt  
set department_id = dpt.department_id+99
from 
(select newd.department_id
from practice.new_dept newd
where 
newd.department_id <40) newdpt
where newdpt.department_id= dpt.department_id 
;

--select 
--1000+1000;

